class Solution(object):
    def longestPalindrome(self, s):
        if not s or len(s) == 1:
            return s
        
        def expand_around_center(left, right):
            # Keep expanding while characters are equal
            while left >= 0 and right < len(s) and s[left] == s[right]:
                left -= 1
                right += 1
            return s[left + 1:right]  # Correct substring extraction
        
        longest = ""

        for i in range(len(s)):  
            odd_palindrome = expand_around_center(i, i)    # Odd-length palindromes
            even_palindrome = expand_around_center(i, i + 1)  # Even-length palindromes
            longest = max(longest, odd_palindrome, even_palindrome, key=len)
        
        return longest

# Example usage
solution = Solution()
result = solution.longestPalindrome("racecar")
print(result)  # Output: "bab" or "aba"
